/**
 * This JS file was auto-generated via Terser.
 *
 * Contributors should avoid editing this file, but instead edit the associated
 * non minified file file. For more information, check out our engineering docs
 * on how we handle JS minification in our engineering docs.
 *
 * @see: https://evnt.is/dev-docs-minification
 */

tribe.tickets=tribe.tickets||{},tribe.tickets.commerce=tribe.tickets.commerce||{},tribe.tickets.commerce.gateway=tribe.tickets.commerce.gateway||{},tribe.tickets.commerce.gateway.stripe=tribe.tickets.commerce.gateway.stripe||{},tribe.tickets.commerce.gateway.stripe.webhooks={},(($,obj,ajaxurl)=>{obj.selectors={button:".tribe-field-tickets-commerce-stripe-webhooks-copy",signingKey:'[name="tickets-commerce-stripe-webhooks-signing-key"]',statusLabel:".tribe-field-tickets-commerce-stripe-webhooks-signing-key-status",tooltip:".tooltip",genericDashicon:".dashicons",saveButton:"input#tribeSaveSettings"},obj.clipboardButton=null,obj.setupCopyUrl=()=>{obj.clipboardButton=new ClipboardJS(obj.selectors.button),$(obj.selectors.button).on("click",(event=>event.preventDefault()))},obj.setupSigningValidation=()=>{$(obj.selectors.signingKey).on("change",obj.onSigningFieldChange)},obj.initiateValidation=async($field,$icon,$label)=>{const params=new URLSearchParams;params.set("signing_key",$field.val()),params.set("action",$field.data("ajaxAction")),params.set("tc_nonce",$field.data("ajaxNonce"));const args={timeout:3e4,body:params,hooks:{beforeRequest:[()=>{$label.text($field.data("loadingText")),$icon.removeClass(["dashicons-no","dashicons-yes"]).addClass("dashicons-update")}]}};return await tribe.ky.post(ajaxurl,args).json()},obj.checkValidationSuccess=async($field,$icon,$label)=>{const params=new URLSearchParams;params.set("signing_key",$field.val()),params.set("action",$field.data("ajaxActionVerify")),params.set("tc_nonce",$field.data("ajaxNonce"));const args={timeout:3e4,body:params,hooks:{beforeRequest:[()=>{$label.text($field.data("loadingText")),$icon.removeClass(["dashicons-no","dashicons-yes"]).addClass("dashicons-update")}]}};return await tribe.ky.post(ajaxurl,args).json()},obj.onSigningFieldChange=async event=>{const $field=$(event.target),$tooltip=$field.siblings(obj.selectors.tooltip),$statusIcon=$tooltip.find(obj.selectors.genericDashicon),$statusLabel=$tooltip.find(obj.selectors.statusLabel),$saveButton=$(obj.selectors.saveButton);if(""===$field.val().trim())return;$field.prop("disabled",!0),$saveButton.prop("disabled",!0);let response=await obj.initiateValidation($field,$statusIcon,$statusLabel);return response.data.is_valid_webhook?$statusIcon.removeClass(["dashicons-update"]).addClass("dashicons-yes"):(response=await obj.checkValidationSuccess($field,$statusIcon,$statusLabel),response.data.is_valid_webhook?$statusIcon.removeClass(["dashicons-update"]).addClass("dashicons-yes"):$statusIcon.removeClass(["dashicons-update"]).addClass("dashicons-no")),$statusLabel.text(response.data.status),$field.prop("disabled",!1),$saveButton.prop("disabled",!1),response},obj.ready=()=>{obj.setupCopyUrl(),obj.setupSigningValidation()},$(document).ready(obj.ready)})(jQuery,tribe.tickets.commerce.gateway.stripe.webhooks,window.ajaxurl);